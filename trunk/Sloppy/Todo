(for 0.5.3):
============

- allow to add tools from the popup of a Tool handle

- remember heights of the dockbooks

- open the first available plot for testing

- make sure that "False" and "True" values are saved/loaded correctly.

- For the Line Options Dialog to work, we need to finish some checkwidgets:
  - line.source is an Instance

  It should be possible to specify complex views, something like this:
  
  section 'general'
   label
   style
   
  section 'source'
   cx, cy
   cxerr, cyerr

   ....

  But maybe then it would be easier to just use the widget factory and
  do the layout myself.

  layout = [('General Settings', ('style', 'label')),
              ('Source', ('source')),
              ('Marker', ())]

  This would make a nice layout list.
  So maybe checkwidgets could store the original sections/keys as 
  self.layout and create the self.keys as it is now.

  Of course it should still be possible to define Connectors individually:

    obj.add_keys(layout, source=MyConnector)

  The only thing that is missing then is using several objects in one
  factory. This might be a little more complicated. Basically, instead
  of passing the object or the object's class, we need to pass a dict
  and specify a name for each object:

    obj.check_in({'obj1': obj1, 'obj2': obj2}, default='obj1'}

  and we can then refer to the keys as
   
    'source' = obj1.source
    'obj2:key' = obj2.key

  This looks like a nice interface!

- Tools: The first layer should be selected as active by default.
  This does not yet work perfectly. Maybe it is selected, but the tool waits
  on an update signal?


-- add buttons to project_view to add datasets/plots and remove items.






SMALL CLEANUPS TO DO:
=====================

- DS => MSG
- change headers (copyright)
- set svn props properly
- maybe move the importers and templates into the app, so we can
  deprecate 'globals' and replace it by the app. OR simply rename
  application to app, the app instance to app.instance and have
  all vars that were in globals into app (app.templates, etc.)


