
OmniTool
========

- Legend is an instance, therefore it is not displayed in the Omni-Tool.
  But if we allow all instances, then we would suddenly also have 
  line.source ?
  Also, we wouldn't need to have axes as list, but could keep the old
  way with x-axis and y-axis.
  Hmmm....
  
- Add icons to OmniTool, otherwise it sucks.

- Clicking on a part of the graph should send out a signal
   'user-pick'
  from the backend, which the OmniTool should catch and move the
  treeview cursor to that element.

- allow popup menu in Omni Treeview, so that you can add/remove elements
  in the view, e.g. Lines.
  

Others
======

- what about the line source? This requires a custom widget -- so write it!

- allow the addition of additional elements to OmniWidgets.
  There might be a button 'set source' in the Line widget that allows a clever
  selection of the line source.

- The tools have a problem: Close the omni tool, leave SloppyPlot.
  Restart SloppyPlot, open the omni tool, then select the first plot.
  The Omni Tool will not be updated, I guess this is because the active
  backend hasn't changed but was already set.

- Migrate Plot window to some kind of Tool (would allow reordering). 
  - Make Plot active when you click in the explorer.
  - Allow closing a Plot (Maybe we could simply add a button in the notebook tab)
  - close a plot as a menu point
 
- Adding/removing items

- Tools.depends_on  und generic_on_update handhaben doppelte
  Namen nicht richtig, da der Index über den Namen gesucht wird.
  Sinnvoller wäre es vielleicht, direkt den Index zu übergeben,
  wenn generic_on_update aufgesetzt wird.

- Ergebnisse des PeakFinders evtl. in ein Dataset übergeben und dieses
  dann anzeigen lassen?

- Zuordnung Peaks -> Symbol

- Peaks als solche der Zeichnung hinzufügen

- Peaks abspeichern (evtl. Log?)

- layer logarithmisch machen funktioniert nicht

- wenn backend ausgewählt wird, aktualisiert sich die Layer nicht selbst...

- fix dragging of dockables

- bugfix for data cursor: if mpl handles the left/right, then don't let
  gtk handle it!

- add cursor position in status bar and let all widgets call the status-
  bar of the app (maybe via a signal: 'push-status', context, msg and
  for the special case of coordinates: 'push-coordinates', x, y)

- put Dataset into notebooks as well.  This will unify the undo.

- remember heights of the dockbooks

- open the first available plot for testing

- minimum size for sidepane

- synchronize tools with backend -- if backend closes, they should discard
  their data as well

- allow to refer to a layer's active line


SMALL CLEANUPS TO DO:
=====================

- change headers (copyright)
- set svn props properly
- maybe move the importers and templates into the app, so we can
  deprecate 'globals' and replace it by the app. OR simply rename
  application to app, the app instance to app.instance and have
  all vars that were in globals into app (app.templates, etc.)


